.container {
    background-color: #EEE;
    width: 1000px;
    /* height: 1000px; */
    margin: 30px auto;
    width: 90%;

    display: grid;

    /* On crée 2 rangés de 150px */
    /* grid-template-rows: 150px 150px; */
    grid-template-rows: repeat(2, 150px);
    /* min-content = max-content : Adapte la hauteur des cellules au texte */
    /* grid-template-rows: repeat(2, min-content); */
    /* minmax(hauteur min, hauteur max) */
    /* grid-template-rows: repeat(2, minmax(150px, min-content)); */
    /* [...] nommage des rangés */
    /* grid-template-rows: [header-start] 150px [header-end contenu-start] 150px [contenu-end]; */

    /* On crée 3 colonnes de 150px */
    /* grid-template-columns: 150px 150px 150px; */
    /* grid-template-columns: repeat(3, 150px); */
    /* max-content : prend la largeur du contenu total = s'adapte à du texte */
    /* min-content : prend la largeur du plus grand mot du texte */
    /* grid-template-columns: max-content 1fr min-content; */
    /* La colonne de gauche va être à 700px et les autres vont retrécir au resize jusqu'à ce que les cellules de droites n'aient plus d'espace, dans ce cas : diminution jusqu'à 200px */
    /* grid-template-columns: minmax(200px, 700px) repeat(2, 1fr); */
    /* auto-fill: On crée un nombre de colonne de façon à remplir l'espace */
    /* grid-template-columns: repeat(auto-fill, 100px); */
    /* auto-fit: On crée un nombre de colonne jusqu'à par rapport à ce qu'on a mis */
    /* grid-template-columns: repeat(auto-fit, 100px); */
    /* Avec nommage et incrémentation suivant le numéro de colonne */
    /* grid-template-columns: repeat(3, [col-start]150px[col-end]); */
    /* fr = permet de remplir l'espace disponible */
    /* grid-template-columns: 1fr 1fr 1fr; */
    /* Il y a toujours un nombre de lignes + colonnes + 1 quand on les visualise */

    /* On nomme toutes les cellules de notre tableau */
    /* Ne pas oublier une cellule ! */
    /* grid-template-areas: "head head ."
                            "foot foot foot"; */

    /* Création d'une goutière entre les lignes */
    /* grid-row-gap: 30px; */
    /* Goutière entre les colonnes */
    /* grid-column-gap: 30px; */
    /* Goutirèe entre les lignes et colonnes */
    /* grid-gap: 30px; */

    /* Paramétrage des grilles implicites = non paramétrées */
    /* Type de positionnement */
    /* grid-auto-flow: column; */
    /* Taille */
    /* grid-auto-columns: 400px; */

    /* Placement des cellules */
    /* On aligne les items verticalement dans les cellules, de base stretch */
    /* align-items: center; */
    /* On aligne les items horizontalement dans les cellules, de base stretch */
    /* justify-items: center; */

    /* Placement du contenu */
    /* On centre la grille verticalement */
    /* justify-content: center; */
    /* On centre la grille horizontalement */
    /* align-content: center; */

    /* A RETENIR : mise en place d'un système responsive */
    /* On met en place une grille qui s'adapte au nombre d'éléments et on indique la taille des cellules */
    /* Permet de créer des grilles implicites */
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    /* On défini la taille des grilles implicites */
    grid-auto-rows: 150px;
}

.items {
    padding: 20px;
    font-size: 30px;
    font-family: sans-serif;
}

.item1 {
    /* On indique que cet item se déplace à partir de la 2e ligne jusqu'à la 3e */
    /* grid-row-start: 2; */
    /* Inutile si taille 1 */
    /* grid-row-end: 3; */

    /* On indique que cet item se place à partir de la column 2 */
    /* grid-column-start: 2;
    grid-column-end: 3; */

    /* Fonction raccourcie : start / end */
    /* grid-row: 1 / 2; */
    /* grid-column: 1 / 4; */
    /* -1 : Jusqu'à la fin */
    /* grid-column: 1 / -1; */
    /* spand 2 : prend 2 cellules */
    /* grid-column: 1 / span 2; */
    /* z-index: 1000; */

    /* Indique le nom de l'air à prendre */
    /* grid-area: head; */

    /* (Moins compréhensible) grid-row-start / grid-column-end / grid-row-end / grid-column-end */
    /* grid-area: 2 / 2 / 3 / 3; */
    background-color: pink;
}

.item2 {
    /* Il peut y avoir un conflit et un élément peut se mettre au dessus d'un autre mais ça n'arrive presque jamais */
    /* grid-row: 1 / 3;
    grid-column: 3 / 4; */
    background-color: teal;
    /* Alignement verticale de la cellule en haut */
    /* align-self: flex-start; */
}


.item3 {
    background-color: yellowgreen;
}


.item4 {
    /* grid-column: col-start 3 / col-end 3; */
    background-color: crimson;
}

.item5 {
    background-color: goldenrod;
}

.item6 {
    /* Positionnement par nom  */
    /* grid-row: header-start / header-end; */
    background-color: indianred;
}